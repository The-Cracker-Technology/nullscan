################################################################################
#                       nullscan.conf - nullscan config file                   #
#################################################################################
#                                                                              #
# NOTES                                                                        #
#                                                                              #
# All options defined here will be overwritten by cmdline options.             #
#                                                                              #
# Multiple values can be assigned using ',', e.g.:                             #
#   foobar = foo,bar                                                           #
#                                                                              #
# Multiple lines with values can be specified like this (example):             #
#   [somes_section]                                                            #
#   some_option = tool1,tool2,tool3,                                           #
#                 ,tool4,tool5,tool6,                                          #
#                                                                              #
# The $NULLSCAN_DIR variable expands to the root path of nullscan. This can be #
# used  to set, for instance, predefined wordlists saved in lists/ directory   #
# inside nullscan. Otherwise you have to use absolute path names for wordlists.#
# Example:                                                                     #
#   ulists = $NULLSCAN_DIR/lists/usernames.txt,                                #
#            ,/home/whoeveryouare/mylists/usernames2.txt,                      #
#                                                                              #
# Default values are present if value is given.                                #
#                                                                              #
# For brevity, comments for each options are not given. Use manpage and '?'    #
# for each cmdline flag to list infos.                                         #
#                                                                              #
################################################################################


[generic]
# target workers
t_workers = 15

# module workers
m_workers = 10

# tool/program workers
p_workers = 15

# global timeout for tools
timeout = 0.0

# create report or not
report = False

# to be verbose with out
verbose = False

# to see output of real tools and more
debug = False


[modules]
# in/ex-cluded modules in list format -> foo,bar,...
in_modules =
ex_modules =


[tools]
# in/ex-cluded nullscan-tools in list format -> foo,bar,...
in_tools =
ex_tools = nikto_http,nikto_https,nikto_web,sslyze,udp_portscan,
           ,host_dns_version,ldapenum,vanguard,gobuster_http,gobuster_https,
           ,gobuster_web,dirsearch_http,dirsearch_https,dirsearch_web,
           ,yawast,eaphammer,


[extra-generic]
# simple generic user and password
user = root
pass = root

# (multiple) lists to filenames containing usernames and passwords
ulists = $NULLSCAN_DIR/lists/usernames.txt,
plists = $NULLSCAN_DIR/lists/passwords.txt,

# api keys for various lame sites
shodan_key = Pp1oDSiavzKQJSsRgdzuxFJs8PQXzBL9
censys_id = a89c010b-d030-4133-87f7-fe74f8d12a56
censys_sec = dLKEOupPB40InHq83ZVyN9630I8i9jgT
ipapi_key = 5d4f2246268475c9b41d0c8adc0a46f2

# addr in uri format for proxy -> http://myleetproxy:8080/, socks://foo.bar:1337
proxy =
proxy_user =
proxy_pass =

# string to search and grep for in socket responses (banners, webpages, etc.)
searchstr = 'change this or use -o with this option to overwrite'
# num bytes to read and print if $searchstr was found. offset: $searchstr+<bytes>
resp_size = 32


[network]
# source host address
shost =

# source port to use, f.e.: in conjunction with tcp/udp port spoofing
sport =

# source mac address to use, f.e.: in conjunction with arp-layer spoofing
smac =

# explicit destination host to use, f.e.: spoofing, DoS
dhost =

# explicit destination port to use, f.e.: spoofing, DoS
dport =

# explicit destination mac-address to use, f.e.: spoofing, DoS
dmac =

# explicit router host address
rhost =

# explicit router port number
rport =

# explicit router mac-address
rmac =

# network device
ndev =

# default nmap options
nmap = -sS -Pn --defeat-rst-ratelimit --nsock-engine epoll


[social]
# simple user/email and password strings
linkedin_user = foo.bar@gmail.com
linkedin_pass = blahblah


[wifi]
# simple strings
ssid = bfs_test_lab
bssid = 64:70:02:BE:0B:42
station_mac = 64:a2:f9:2e:78:77
wifi_timeout = 20.0
wifi_channel = 8
wifi_default_tool = airodump-ng


[web]
# a start url for tools which support this, e.g.: start-url to crawl
start_url =

# explicit login url for tools which support this, e.g.: login forms to test
login_url =

# single attack url -> http://foo.bar/foo.bar?foobar=1
attack_url =

# string of http post parameters -> foo=bar&bar=foo...
post_data =
referer = https://www.google.com/

# for any kind of login: form, http-basic auth, digest, etc.
web_user =
web_pass =

# string of cookies -> foo:bar,bar:foo,...
cookies =

# simple user-agent string
ua = Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:75.0) Gecko/20100101 Firefox/75.0

# list of filenames containing user-agents -> /tmp/foo.txt,/home/hacker/ua.txt
ua_lists =

# list of filenames containing dir and file name ->
flists = $NULLSCAN_DIR/lists/filenames.txt,


# EOF
